// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v2.1.11-dirty-wicked-fork
// source: copyfrom.go

package books

import (
	"context"
)

// iteratorForBulkInsertByCopyfrom implements pgx.CopyFromSource.
type iteratorForBulkInsertByCopyfrom struct {
	rows                 []BulkInsertByCopyfromParams
	skippedFirstNextCall bool
}

func (r *iteratorForBulkInsertByCopyfrom) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBulkInsertByCopyfrom) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Name,
		r.rows[0].Description,
		r.rows[0].Metadata,
		r.rows[0].Category,
		r.rows[0].Price,
	}, nil
}

func (r iteratorForBulkInsertByCopyfrom) Err() error {
	return nil
}

func (q *Queries) BulkInsertByCopyfrom(ctx context.Context, arg []BulkInsertByCopyfromParams) (int64, error) {
	q.db.CountIntent("books.BulkInsertByCopyfrom")
	return q.db.WCopyFrom(ctx, "books.BulkInsertByCopyfrom", []string{"books"}, []string{"name", "description", "metadata", "category", "price"}, &iteratorForBulkInsertByCopyfrom{rows: arg})
}
